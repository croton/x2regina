/* ----------------- graphql ------------------ */
extension  = graphql,js
code_type  = graphql

key a-0 = MSG [graphql] 1=Prof 2=Xp 3=Xk 4=Types
key a-1 = EDIT graphql.prof
key a-2 = MACRO cmdout xpdr.graphql xs graphql
key a-3 = MACRO msgFromCmd --t GraphQL Keys --c xk graphql
key a-4 = MACRO qp Boolean Int Float String
key a-5 = MACRO chooser ObjectType Int Float Boolean NonNull String --t Types

expand_keyword = root
expand_replace = 'new GraphQLSchema({'
expand_replace = '  query: new GraphQLObjectType({'
expand_replace = "    name: 'Query',\c"
expand_replace = '  })'
expand_replace = '});'

expand_keyword = type \1
expand_replace = 'new GraphQLObjectType({'
expand_replace = "  name: '\1',"
expand_replace = "  description: '\1',"
expand_replace = '  fields: {\c}'
expand_replace = '});'

expand_keyword = field \1
expand_replace = '\1: {'
expand_replace = '  type: new GraphQLNonNull(GraphQLString),'
expand_replace = "  description: '\1'"
expand_replace = '},'

expand_keyword = typesdl \1
expand_replace = 'type \c\1 {'
expand_replace = '}'

expand_keyword = rootsdl
expand_replace = 'type Query {'
expand_replace = '  \c'
expand_replace = '}'

expand_keyword = typi \1
expand_replace = 'type \1 implements \c {'
expand_replace = '}'

expand_keyword = enum
expand_replace = 'enum \c {'
expand_replace = '}'

expand_keyword = ifc
expand_replace = 'interface \c {'
expand_replace = '}'

expand_keyword = mut
expand_replace = 'mutation {'
expand_replace = '  \c'
expand_replace = '}'

expand_keyword = sub
expand_replace = 'subscription {'
expand_replace = '  \c'
expand_replace = '}'

expand_keyword = \1 {
expand_replace = '\1 {'
expand_replace = '  \c'
expand_replace = '}'

expand_keyword = schema \1
expand_replace = 'type Query {'
expand_replace = '  \1\c '
expand_replace = '}'
expand_replace = 'type Mutation {}'
expand_replace = 'type Subscription {}'

expand_keyword = resolve \1
expand_replace = '\1: {'
expand_replace = '  \c'
expand_replace = '  @: (parent) => parent.@,'
expand_replace = '}'

